#!/usr/bin/env bash

if [[ $# -lt 3 ]]; then
    echo "Usage: $0 <script-dir> <out-dir> <zip-file> [<zip-file> [...]]"
    exit 1;
fi

scriptd=$1; shift
outd=`readlink -e $1`; shift

workdir=/tmp/$(basename $0 .sh);

i=0
# How many processes to run in the node
ncpus=10
# Timeout (this is probably in CPU time so if you run multithreaded,
# mutiply the number by the number of threads)
timeout=7200

while [[ ! $# -eq 0 ]]; do
    echo $1;
    inst=$1;
    bname=$(basename ${inst})
    scrname=$(printf "unzip.%s.sh" ${bname})

    cat << __EOF__ > ${scriptd}/${scrname}
#!/bin/bash
## Generated by $0
## From ${inst}
#SBATCH --time=2:10:00
#SBATCH --cpus-per-task=20
#SBATCH --nodes=1
#SBATCH --output=$outd/$scrname.out
#SBATCH --error=$outd/$scrname.err
__EOF__

    for ((i=0; i < $ncpus; i++)); do
        echo "iter $i"
        if [[ $# == 0 ]]; then
            break;
        fi
        ex=$1; shift
        cat << __EOF__ >> $scriptd/$scrname
(
  echo "${ex}"
  inst=${ex}
  workdir_inst=${workdir}/\$(basename \${inst} .zip);
  echo \${workdir_inst}
  mkdir -p \${workdir_inst};
  output=$outd/$scrname
  res_output=\${output}.${i}.res.out
  cd \${workdir_inst}
  unzip \${inst} > \$output.${i}.unzip.out 2> \$output.${i}.unzip.err
  rm -f \${res_output}
  for file in \$(find . -name '*.smt2'); do
    num_asrts=\$(grep '^(assert' \$file |wc -l)
    echo "\$file \${num_asrts}" >> \${res_output}
  done
  rm -rf \${workdir_inst};
) &
__EOF__
    done

    echo "wait" >> $scriptd/$scrname
    i=$((i+1))
    chmod +x $scriptd/$scrname
done

